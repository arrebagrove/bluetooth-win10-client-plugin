{% include "copyright" %}
{% include "generation_details" %}
using System;

namespace {%= o.meta.getNamespace() %}
{
    /// <summary>
    /// Simple Base class for all classes generated by the plugin.
    /// </summary>    
    public class BleBase
    {
        protected BleBase() { }
    }

    /// <summary>
    /// Add simple helper method to convert any string represetnation of GUID
    /// into real Guid object in C#.
    /// </summary>
    public static class GuidExtensionForString
    {
        private const int MaxLenghtOf16bitUUID = 6;
        private const string StandardPrefix = "0000";
        private const string StandardSuffix = "-0000-1000-8000-00805f9b34fb";
        private const string HexPrefix = "0x";

        /// <summary>
        /// Convert string into proper Guid object. Accepts full Guid as well as 16bit value for adopted
        /// BLE profiles.
        /// </summary>
        /// <param name="me">string representation of the Guid</param>
        /// <returns>valid Guid object or empty Guid object in case string was not valid representation of Guid</returns>
        public static Guid ToGuid(this string me)
        {
            if (me == null)
            {
                return Guid.Empty;
            }

            String uuid = me;
            if (uuid.Length <= MaxLenghtOf16bitUUID)
            {
                uuid = StandardPrefix + uuid.Replace(HexPrefix, string.Empty) + StandardSuffix;
            }

            try
            {
                return Guid.Parse(uuid);
            }
            catch (Exception)
            {
                return Guid.Empty;
            }
        }
    }
}
